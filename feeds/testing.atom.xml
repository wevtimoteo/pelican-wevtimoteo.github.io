<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>wevtimoteo</title><link href="http://wevtimoteo.github.io/" rel="alternate"></link><link href="http://wevtimoteo.github.io/feeds/testing.atom.xml" rel="self"></link><id>http://wevtimoteo.github.io/</id><updated>2013-03-11T10:47:00-04:00</updated><entry><title>O que é Teste de Regressão?</title><link href="http://wevtimoteo.github.io/o-que-e-teste-de-regressao.html" rel="alternate"></link><published>2013-03-11T10:47:00-04:00</published><updated>2013-03-11T10:47:00-04:00</updated><author><name>Weverton do Couto Timoteo</name></author><id>tag:wevtimoteo.github.io,2013-03-11:o-que-e-teste-de-regressao.html</id><summary type="html">&lt;p&gt;Há um tempo já me pego lendo e ouvindo esse termo e nunca tinha entendido exatamente quais eram os momentos que eu deveria fazê-lo, então aproveitei para fazer um review completo sobre 'O que é Teste de Regressão?'.&lt;/p&gt;
&lt;h3&gt;Qual o objetivo do teste de software?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Identificar suas falhas para que a correção seja feita antes da entrega do produto ao usuário final.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Como um teste de regressão surge?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Um componente novo ou modificado pode falhar quando usado com componentes inalterados, causando defeito
nos componentes inalterados pela geração de efeitos colaterais ou pelas características de interação.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Quando isso ocorre, diz-se que o sisteme sobre testes regrediu, por isso esses testes são chamados de testes de regressão.&lt;/p&gt;
&lt;p&gt;Em poucas palavras, você quebrou o teste de uma outra funcionalidade por conta dessa nova &lt;em&gt;feature&lt;/em&gt; ou &lt;em&gt;correção de bug&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Quando um teste de regressão é utilizado?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;durante o desenvolvimento iterativo&lt;/li&gt;
&lt;li&gt;depois da depuração&lt;/li&gt;
&lt;li&gt;no primeiro passo de uma integração&lt;/li&gt;
&lt;li&gt;na manutenção de software&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4&gt;E dentro do escopo de Orientação a Objetos?&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;quando uma subclasse é desenvolvida&lt;/li&gt;
&lt;li&gt;quando uma super-classe é alterada&lt;/li&gt;
&lt;li&gt;quando uma classe servidora (classe que você estendeu, por exemplo)&lt;/li&gt;
&lt;li&gt;quando uma correção de falha é realizada&lt;/li&gt;
&lt;li&gt;quando uma classe é reusada em um novo contexto&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Isso é apenas um resumo, todas informações que citei podem ser consultadas com maiores detalhes nos links abaixo.&lt;/p&gt;
&lt;h3&gt;Fontes:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/csilvas/testes-de-regresso-automatizados"&gt;Slideshare @csilvas - Testes de regressão automatizados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.testar.me/pages/testar_me_teste_funcional_regressao.html"&gt;Teste Funcional e Regressão&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ic.unicamp.br/~ranido/mc626/Regressao.pdf"&gt;Testes de Regressão - R.Anido (Unicamp)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://practicingruby.com/articles/shared/afshdqdholth"&gt;Thoughts on regression testing - Praticing Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="development testing software regression"></category></entry></feed>