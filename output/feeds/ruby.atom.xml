<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>wevtimoteo</title><link href="http://wevtimoteo.github.io/" rel="alternate"></link><link href="http://wevtimoteo.github.io/feeds/ruby.atom.xml" rel="self"></link><id>http://wevtimoteo.github.io/</id><updated>2013-05-15T13:47:00-04:00</updated><entry><title>Redirecionando de volta no Rails</title><link href="http://wevtimoteo.github.io/redirecionando-de-volta-no-rails.html" rel="alternate"></link><updated>2013-05-15T13:47:00-04:00</updated><author><name>Weverton do Couto Timoteo</name></author><id>tag:wevtimoteo.github.io,2013-05-15:redirecionando-de-volta-no-rails.html</id><summary type="html">&lt;p&gt;Queria só fazer um post rápido de um truque que eu não conhecia =P&lt;/p&gt;
&lt;p&gt;O comando &lt;code&gt;redirect_to :back&lt;/code&gt; faz exatamente o ele diz (óbvio): redireciona o usuário de volta para página que o mesmo estava.&lt;/p&gt;
&lt;p&gt;Esse comando é similar ao &lt;code&gt;redirect_to request.env["HTTP_REFERER"]&lt;/code&gt;, por isso não se esqueça de setar o HTTP_REFERER no seu teste de controller.&lt;/p&gt;
&lt;p&gt;Algo bacana desse redirect é que ele leva os &lt;code&gt;params&lt;/code&gt; também, então se o usuário estava em página de busca cheia de filtros, nada será perdido.&lt;/p&gt;</summary><category term="ruby rails"></category></entry></feed>